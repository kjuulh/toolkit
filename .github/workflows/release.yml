name: release
on:
  push:
    branches:
      - main
      - next
  pull_request:
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0

jobs:
  release:
    name: ${{ matrix.target }}
    permissions:
      contents: write
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            release-target: linux-amd64
            deb: true
          - os: ubuntu-latest
            target: arm-unknown-linux-musleabihf
            release-target: linux-arm
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            release-target: linux-arm7
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            release-target: linux-arm64
            deb: true

          - os: macos-11
            target: x86_64-apple-darwin
            release-target: darwin-amd64
          - os: macos-11
            target: aarch64-apple-darwin
            release-target: darwin-arm64
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: sed -En 's/^version = "(.*)"/value=\1/p' Cargo.toml >> $GITHUB_OUTPUT

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Setup cache
        uses: Swatinem/rust-cache@v1
        with:
          key: ${{ matrix.target }}

      - name: Build binary
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --locked --target=${{ matrix.target }} --color=always --verbose
          use-cross: ${{ runner.os == 'Linux' }}

      - name: Install cargo-deb
        if: ${{ matrix.deb == true }}
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-deb

      - name: Build deb
        if: ${{ matrix.deb == true }}
        uses: actions-rs/cargo@v1
        with:
          command: deb
          args: --no-build --no-strip --output=. --target=${{ matrix.target }}

      - name: Package (*nix)
        if: runner.os != 'Windows'
        run: >
          tar -cv
          LICENSE README.md
          man/
          -C target/${{ matrix.target }}/release/ toolkit
          | gzip --best
          > 'toolkit-${{ steps.get_version.outputs.value }}-${{ matrix.release-target }}.tar.gz'
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.release-target }}
          path: |
            *.deb
            *.tar.gz
            *.zip
      - name: Create release
        if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'chore(release)') }}
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            *.deb
            *.tar.gz
            *.zip
          name: ${{ steps.get_version.outputs.value }}
          tag_name: ${{ steps.get_version.outputs.value }}
  brew-releaser:
    name: Homebrew releaser
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Release to homebrew tap
        uses: Justintime50/homebrew-releaser@v1
        if: ${{ github.ref == 'refs/heads/main' && startsWith(github.event.head_commit.message, 'chore(release)') }}
        with:
          # The name of the homebrew tap to publish your formula to as it appears on GitHub.
          # Required - strings.
          homebrew_owner: kjuulh
          homebrew_tap: brew

          # The name of the folder in your homebrew tap where formula will be committed to.
          # Default is shown - string.
          formula_folder: toolkit

          # The GitHub Token (saved as a repo secret) that has `repo` permissions for the homebrew tap you want to release to.
          # Required - string.
          github_token: ${{ secrets.BREW_GITHUB_TOKEN }}

          # Git author info used to commit to the homebrew tap.
          # Defaults are shown - strings.
          commit_owner: kjuulh
          commit_email: homebrew-releaser@kjuulh.io

          # Custom dependencies in case other formulas are needed to build the current one.
          # Optional - multiline string.
          #depends_on: |

          # Custom install command for your formula.
          # Required - string.
          install: 'bin.install "toolkit"'

          # Custom test command for your formula so you can run `brew test`.
          # Optional - string.
          #test: 'assert_match("my script output", shell_output("my-script-command"))'

          # Adds URL and checksum targets for different OS and architecture pairs. Using this option assumes
          # a tar archive exists on your GitHub repo with the following URL pattern (this cannot be customized):
          # https://github.com/{GITHUB_OWNER}/{REPO_NAME}/releases/download/{TAG}/{REPO_NAME}-{VERSION}-{OPERATING_SYSTEM}-{ARCHITECTURE}.tar.gz'
          # Darwin AMD pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-darwin-amd64.tar.gz
          # Linux ARM pre-existing path example: https://github.com/justintime50/myrepo/releases/download/v1.2.0/myrepo-1.2.0-linux-arm64.tar.gz
          # Optional - booleans.
          target_darwin_amd64: true
          target_darwin_arm64: true
          target_linux_amd64: true
          target_linux_arm64: true

          # Update your homebrew tap's README with a table of all projects in the tap.
          # This is done by pulling the information from all your formula.rb files - eg:
          #
          # | Project                                    | Description  | Install                  |
          # | ------------------------------------------ | ------------ | ------------------------ |
          # | [formula_1](https://github.com/user/repo1) | helpful text | `brew install formula_1` |
          # | [formula_2](https://github.com/user/repo2) | helpful text | `brew install formula_2` |
          # | [formula_3](https://github.com/user/repo3) | helpful text | `brew install formula_3` |
          #
          # Simply place the following in your README or wrap your project in these comment tags:
          # <!-- project_table_start -->
          # TABLE HERE
          # <!--project_table_end -->
          #
          # Finally, mark `update_readme_table` as `true` in your GitHub Action config and we'll do the work of building a custom table for you.
          # Default is `false` - boolean.
          update_readme_table: true

          # Skips committing the generated formula to a homebrew tap (useful for local testing).
          # Default is shown - boolean.
          skip_commit: false

          # Logs debugging info to console.
          # Default is shown - boolean.
          debug: true
